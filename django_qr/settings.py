"""
Django settings for django_qr project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# ============================================================
# üö® SECURITY SETTINGS
# ============================================================

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5cumpk=+yf0_jr*3&@v!zoo_pfumiowww%pbih$gw69vi&7rkz'

# SECURITY WARNING: don't run with debug turned on in production!
# ‚úÖ Tip: Render will override this using environment variables
DEBUG = os.getenv('DEBUG', 'True') == 'True'

# ‚úÖ Allow all hosts temporarily (Render will use its own host URL)
ALLOWED_HOSTS = ['*']


# ============================================================
# üöÄ APPLICATION DEFINITION
# ============================================================

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # ‚úÖ Your Django QR app
    'django_qr',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',

    # ‚úÖ Added Whitenoise middleware (MUST be right after SecurityMiddleware)
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_qr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # ‚úÖ Template directory added
        'DIRS': [os.path.join(BASE_DIR, 'templates')],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_qr.wsgi.application'


# ============================================================
# üóÑÔ∏è DATABASE
# ============================================================

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# ============================================================
# üîê PASSWORD VALIDATION
# ============================================================

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# ============================================================
# üåç INTERNATIONALIZATION
# ============================================================

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# ============================================================
# üßæ STATIC & MEDIA FILES (for CSS, JS, images, etc.)
# ============================================================

# ‚úÖ URL for static files
STATIC_URL = '/static/'

# ‚úÖ Folder where static files are collected for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# ‚úÖ Folder for extra static assets during development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# ‚úÖ Whitenoise settings for production (serves static files efficiently)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# ‚úÖ Media settings (user-uploaded files, if any)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# ============================================================
# üÜî DEFAULT PRIMARY KEY FIELD TYPE
# ============================================================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
