"""
Django settings for django_qr project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# ============================================================
# üö® SECURITY SETTINGS
# ============================================================

# SECURITY WARNING: keep the secret key used in production secret!
# Render will set this from your Environment Variables
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-default-key-for-local-dev')

# SECURITY WARNING: don't run with debug turned on in production!
# This reads the DEBUG value from Render's environment, defaults to False
DEBUG = os.getenv('DEBUG', 'False') == 'True'

# ‚úÖ CORRECTED ALLOWED_HOSTS
# This automatically uses your Render URL in production
# and '127.0.0.1' for local development.
ALLOWED_HOSTS = []
RENDER_EXTERNAL_HOSTNAME = os.getenv('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)
else:
    # Allow localhost for development if RENDER_EXTERNAL_HOSTNAME is not set
    ALLOWED_HOSTS.append('127.0.0.1')


# ============================================================
# üöÄ APPLICATION DEFINITION
# ============================================================

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # ‚úÖ CRITICAL FIX: Use your app name 'generator', NOT the project 'django_qr'
    'generator',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',

    # ‚úÖ Whitenoise middleware (Correctly placed)
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_qr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        
        # ‚úÖ Correct template directory
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_qr.wsgi.application'


# ============================================================
# üóÑÔ∏è DATABASE
# ============================================================
# Render will automatically configure this using the DATABASE_URL env variable

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# ============================================================
# üîê PASSWORD VALIDATION
# ============================================================

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# ============================================================
# üåç INTERNATIONALIZATION
# ============================================================

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# ============================================================
# üßæ STATIC & MEDIA FILES (for CSS, JS, images, etc.)
# ============================================================

# ‚úÖ URL for static files (CSS, JavaScript)
STATIC_URL = '/static/'

# ‚úÖ Folder where static files are collected for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# ‚úÖ This line was removed as it pointed to a non-existent 'static' folder
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]

# ‚úÖ Whitenoise settings for production
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# ‚ö†Ô∏è IMPORTANT ‚ö†Ô∏è
# These settings will NOT work on Render for your QR codes.
# Render has an ephemeral (temporary) filesystem.
# Your generated QR codes will be DELETED.
# You MUST use a service like Amazon S3 or Cloudinary for file storage.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# ============================================================
# üÜî DEFAULT PRIMARY KEY FIELD TYPE
# ============================================================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'